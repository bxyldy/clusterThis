/**
@mainpage clusterThis mantra geometry instancer

The @b clusterThis mantra geometry instancing procedural DSO/OTL will instance geometry to
incoming points and will process the point attributes in a number of ways for the instanced geometry.
Delays geomtery instantiation until render time thus, reduces size of IFD file and network bandwidth,
allows access to render time data, add additional detail to scene.

@b Features:
@li Instance points or primitives (sphere, cube, grid, tube, circle, curve, metaball) at render time
@li CVEX processing of instanced geometry
@li Open VDB post processing of instanced geometry and it's attributes
@li Motion blur (velocity or geometry) can use the "backtrack" or the "v" attribute
@li Instance disk file (and apply CVEX deformation and attribute processing)
@li Cache file stores data when generating deep shadow maps to optimize instancing.

@b clusterThis is developed and maintained by
<A TARGET=_blank HREF="http://www.digitalcinemaarts.com/software/">Digital Cinema Arts</A>

See the @subpage overview "Overview" for an introduction to clusterThis.

See the @subpage faq "FAQ" for frequently asked questions about @b clusterThis.

See the @subpage exampleScenes "Examples" for examples of @b clusterThis.

See the @subpage changes "Release Notes" for what's new in this version of @b clusterThis.

@page overview clusterThis Overview

@section Contents
- @ref secParameters
- @ref secInstall
- @ref secNotes
- @ref secDesignNotes
- @ref secDebugTips
<!-- - @ref secRegistry -->

@section secParameters Parameters

The current set of parameters are:

@b Setup @b Tab:
@li Use Geo File: Use geometry file instead point cloud from the IFD file.
@li Source Geo File: The file to be used as the source of input points (as opposed to the points from the current scene (or IFD file).
@li Type: The type of geometry that will be instanced.
@li Num. Copies: Number of copies of the geometry to instance per point of input geometry.
@li Recursion: Number of loops through the instancing process per copy of each point.
@li Radius: The distance from the center of the point to the instanced geometry (if the "radius" point attribute is present in the point cloud it will override this parameter).
@li Scale: The scale (X, Y, Z) of the instanced geometry primitive (this parameter is modulated by the "pscale" point attribute).
@li Frequency:	Frequency of the instanced geometry.
@li Offset: Offset to the instanced geometry.
@li Instance Probability: Controls the amount of "randomness" in choosing to instance an object or not.
@li Instance Geometry File: Geometry disk file to be instanced (is there's no geo_fname point attribute).
@li Motion Blur: Motion blur type: None, Velocity or Deformation
@li Backtrack Motion Blur: Use the "backtrack" point attribute for motion blur
@li Shutter Open: The shutter open value for motion blur
@li Shutter Close: The shutter close value for motion blur
@li Messages: The verbosity of the messages sent to the console during rendering
@li Bounding Box Fudge Factor: The amount of expansion to apply to the bounding box.
@li Time: Current time
@li Frame: Current frame

@b Noise @b Tab:
@li Type: Simple noise generator noise types - Fast Perlin, Sparse, Perlin, Alligator, Merseene Twister
@li Amplitude: Amplitude of the noise applied to the posistion of the instanced geometry
@li Roughness: Roughness of the generated noise
@li Fractal Depth: Fractal depth (recursion) of the noise function
@li Attenuation: Amount of attenuation applied to the noise generator
@li Seed: Seed for the noise generator

@b CVEX @b Tab:

@li Instance: Will run CVEX on each instance
@li Pre-Process: Will run CVEX on incoming point cloud
@li Posr-Process: Will run CVEX on the entire set of instanced geometry

@li CVEX Point Shader: The file name of the .vex shader to be used on points
@li Execute Point VEX Code: Execute the VEX code on the instanced object (points)
@li CVEX Primitive Shader: The file name of the .vex shader to be used on primitives
@li Execute Primitive VEX Code: Execute the VEX code on the instanced object (primitives)

@li CVEX Vars (point) 	The point attributes sent to the CVEX code for processing
@li CVEX Vars (primitive) 	The primitive attributes sent to the CVEX code for processing

@b Post @b Process @b Tab:
@li Enable: Enable post processing of the instanced geometry.

@li Enable NN: Enable nearest neighbor post processing
@li Position Influence: Amount of influence to the point's position
@li Velocity Influence: Amount of influence to the point's velocity

@li Enable VDB: Enable VDB post processing
@li Use VDB File: Use this VDB grid file for post processing.
@li VDB File: The file to be used as the source of input VDB grid
@li Grid Name: Name of the grid in the VDB file to use
@li Particle Footprint: Use this parameter to select the type of particle footprints (spherical or conical).
@li WS Units: Specify the narrow-band width in world-space units
@li Instance Offset: Scale of distance between sphere instances. Use this parameter to control the aliasing and the number of instances.
@li Voxel Size: Size of the VDB grid voxels
@li Radius Min: Smallest allowed radius in voxels. Use this parameter to ignore small particles.
(Note: the default value of 1.5 voxels correspond to the Nyquist grid sampling frequency, the smallest size the grid can safely represent. Thus, values smaller than 1.5 will likely result in aliasing!)
@li Half Bandwidth: Half-band width
@li Radius Mult: Scaling multiplier for the radius. Use this parameter to control the size of the particle footprints.
(Note: particles smaller than \"Min voxel radius\" (e.g. 1.5 which is the Nyquist limit) are NOT rasterized!)
@li Velocity Mult: Scaling multiplier for the velocity. Use this parameter to control the length of velocity trails.
@li Gradient Width:
@li Falloff:
@li Filter: Median, Mean, Mean Curvature, Laplacian. Offset (with offset amount)
@li Position Influence: Amount of influence to the point's position
@li Velocity Influence: Amount of influence to the point's velocity
@li Color Influence: Amount of influence to the point's color
@li Normal Influence: Amount of influence to the point's normal
@li Write VDB Files: Write the VDB grids to disk
@li VDB File Base Name: The base name for the VDB grids to be written to disk.

@b Misc @b Tab:
@li Temp File Path: Temporary file for the instanced geometry
@li Use temp cache file: Save the geometry in a temporary cache file
@li Save temp cache file: 	Do not delete cache file (to save the temp geometry cache file for later use)
@li Write Statistics: Write statistics to an XML file
@li Statistics File Path: Statistics XML filename

@section secInstall Installation

To install the "clusterThis" mantra procedural DSO, there are 4 components that need to be installed: <br>
 <br>
1) The "executable" that runs when mantra calls the clusterThis functions <br>
2) The VRAYprocedural configuration file to tell mantra where to find the clusterThis DSO or DLL <br>
3) The OTL, which is the interface to the mantra geometry procedural allowing the user to control it's behaviour <br>
4) The OpenVDB libraries <br>


@b Step @b 1:
<pre>
The "executables":
VRAY_clusterThis.so
VRAY_clusterThis.dylib

Place one of these (depending on operating system) in a typical mantra DSO/DLL location, e.g.:
$HOME/houdiniX.XX/dso/mantra/
$JOB/houdiniX.XX/dso/mantra/
</pre>


@b Step @b 2:
<pre>
The mantra procedural configuration file:
VRAYprocedural

Place this file (or append the contents to your current VRAYprocedural file) in a location searched by Houdini:
$HOME/houdiniX.XX/
$JOB/houdiniX.XX/
</pre>


@b Step @b 3:
<pre>
Geometry Shader OTL:
VM_GEO_clusterThis.otl

Place this file in a location searched by Houdini:
$HOME/houdiniX.XX/otls/
$JOB/houdiniX.XX/otls/
</pre>

@b Step @b 4:
<pre>
The Open VDB Libraries:
Copy the openvdb lib files (libopenvdb.so& libopenvdb_houdini.so) to a location on your system if you do not already have them installed.
Be sure to set the LD_LIBRARY_PATH if needed to find the libaries.
</pre>

@section secNotes Notes

To be done.


@section secDesignNotes Design Notes

Flowcharts:

@b Overall mantra procedural call sequence:
http://www.digitalcinemaarts.com/dev/clusterThis/design/clusterThis_overall.pdf

@b render() method algorithm:
http://www.digitalcinemaarts.com/dev/clusterThis/design/clusterThis_flowchart.pdf

@b runCVEX() method algorithm:
http://www.digitalcinemaarts.com/dev/clusterThis/design/clusterThis_runCVEX.pdf

@b postProcess() algorithm:
http://www.digitalcinemaarts.com/dev/clusterThis/design/clusterThis_postProcess.pdf

@section secDebugTips Debug Tips

1) To make sure the clusterThis DSO/DLL is available to mantra, from a UNIX (or CygWIN on Windows) shell, execute the following command:

<pre>
earth:~> mantra -V4
Registering procedural 'clusterThis'
Registering procedural 'sprite'
Registering procedural 'image3d'
Registering procedural 'metapoly'
Registering procedural 'file'
Registering procedural 'fur'
Registering procedural 'program'
Registering procedural 'hscriptinstance'
Registering procedural 'image3dvolume'
mantra Version 9.5.169 (Compiled on 07/17/08)
</pre>

The verbosity level of 4 or greater for mantra will report which mantra procedural DSO's are available.
If clusterThis is not in this list, the DSO is not in the right location, or the VRAYprocedural file isn't correct.




*/
